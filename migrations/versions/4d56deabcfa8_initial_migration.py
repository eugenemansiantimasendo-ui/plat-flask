"""Initial migration

Revision ID: 4d56deabcfa8
Revises: 
Create Date: 2025-09-05 01:40:11.198300

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4d56deabcfa8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('categorie', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['nom'])

    with op.batch_alter_table('plats', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('plats_categorie_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'categorie', ['categorie_id'], ['categorie_id'], ondelete='SET NULL')
        batch_op.drop_column('categorie')

    with op.batch_alter_table('reservation_items', schema=None) as batch_op:
        batch_op.alter_column('id_plat',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('quantite',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('1'))
        batch_op.drop_column('plat_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reservation_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('plat_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.alter_column('quantite',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('1'))
        batch_op.alter_column('id_plat',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('plats', schema=None) as batch_op:
        batch_op.add_column(sa.Column('categorie', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('plats_categorie_id_fkey'), 'categorie', ['categorie_id'], ['categorie_id'])

    with op.batch_alter_table('categorie', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    # ### end Alembic commands ###
